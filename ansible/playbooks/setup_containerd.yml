- name: Installing containerd
  hosts: all
  become: true
  tasks:
    - name: Including variables
      include_vars: vars/default.yml

    - name: Including binaries variables
      include_vars: vars/binaries.yml

    - name: Update apt package cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Download containerd binaries
      ansible.builtin.get_url:
        url: "{{ containerd_binaries }}"
        dest: /tmp/{{containerd_file}}

    - name: Extract containerd binaries
      ansible.builtin.unarchive:
        src: "/tmp/{{ containerd_file }}"
        dest: /usr/local
        remote_src: true

    - name: Download containerd.service
      ansible.builtin.get_url:
        url: "{{ containerd_service }}"
        dest: /etc/systemd/system/containerd.service

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable now containerd containe
      ansible.builtin.systemd:
        name: containerd
        state: started
        enabled: yes

    - name: Download runc
      ansible.builtin.get_url:
        url: "{{ runc_file }}"
        dest: /usr/local/sbin/runc
        mode: 0755

    - name: Download sha256sum file
      ansible.builtin.get_url:
        url: "{{ runc_checksum_file }}"
        dest: "/tmp/runc.sha256sum"

    - name: Verify sha256 sum of runc
      ansible.builtin.shell: |
        cat /tmp/runc.sha256sum | sha256sum /usr/local/sbin/runc
      register: runc_sha256

    - name: Download cni_plugins
      ansible.builtin.get_url:
        url: "{{ cni_plugins_file }}"
        dest: /tmp/cni-plugins.tgz

    - name: Download cni_plugin checksum file
      ansible.builtin.get_url:
        url: "{{ cni_plugins_checksum_file }}"
        dest: "/tmp/cni_plugins.sha256sum"

    - name: Verify sha256 sum of cni
      ansible.builtin.shell: |
        cat /tmp/cni_plugins.sha256sum | sha256sum /tmp/cni-plugins.tgz 
      register: runc_sha256

    - name: Ensure that /opt/cni/bin exists
      ansible.builtin.file:
        path: /opt/cni/bin
        state: directory

    - name: Unarchive cni-plugins
      ansible.builtin.unarchive:
        src: /tmp/cni-plugins.tgz
        dest: /opt/cni/bin
        remote_src: true

    - name: Set owner and group for /opt/cni/bin
      file:
        path: /opt/cni/bin
        owner: root
        group: root
        recurse: true

    - name: Setup containerd config directory
      file:
        path: /etc/containerd
        state: directory
    
    - name: Generate default containerd config file
      shell:
        cmd: containerd config default > /etc/containerd/config.toml

    - name: Replace containerd SystemdCgroup to true
      shell:
        cmd: sed -i 's/ SystemdCgroup = false/ SystemdCgroup = true/' /etc/containerd/config.toml

    - name: Enable packet forwarding
      ansible.builtin.sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present
        reload: yes
